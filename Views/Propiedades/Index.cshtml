@model IEnumerable<test.Models.Propiedad>;

@{
    ViewData["Title"] = "Propiedades";
    var prevPage = Model.Count() > 0 ? ViewBag.CurrentPage - 1 : ViewBag.CurrentPage;
    var nextPage = ViewBag.CurrentPage + 1;
}



<h1 class="text-center">Propiedades</h1>
<a class="explode-btn" asp-action="Create">
    <i class="fas fa-plus-circle fa-2x"></i>
</a>

<table class="table table-bordered">
    <thead class="thead-light">
        <tr>
            <th>@Html.DisplayNameFor(model => model.IdPropiedad)</th>
            <th>@Html.DisplayNameFor(model => model.Nombre)</th>
            <th>@Html.DisplayNameFor(model => model.Precio)</th>
            <th>@Html.DisplayNameFor(model => model.Direccion)</th>
            <th>@Html.DisplayNameFor(model => model.Habitaciones)</th>
            <th>@Html.DisplayNameFor(model => model.Banos)</th>
            <th>@Html.DisplayNameFor(model => model.Area)</th>
            <th>@Html.DisplayNameFor(model => model.PropietarioId)</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.IdPropiedad)</td>
                <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                <td>$@Html.DisplayFor(modelItem => item.PrecioFormateado)</td>
                <td>@Html.DisplayFor(modelItem => item.Direccion)</td>
                <td>@Html.DisplayFor(modelItem => item.Habitaciones)</td>
                <td>@Html.DisplayFor(modelItem => item.Banos)</td>
                <td>@Html.DisplayFor(modelItem => item.Area)m2</td>
                <td>@($"{item.Duenio.Nombre} {item.Duenio.Apellido} (ID: {item.Duenio.IdPropietario})")</td>
                <td>
                    <a class="btn btn-primary btn-sm custom-link" href="@Url.Action("Edit", new { id = item.IdPropiedad })">
                        <i class="fas fa-edit"></i>
                    </a>
                    <a class="btn btn-info btn-sm custom-link" href="@Url.Action("Details", new { id = item.IdPropiedad })">
                        <i class="fas fa-info-circle"></i>
                    </a>
                    <a class="btn btn-warning btn-sm custom-link" href="#">
                        <i class="fas fa-pause" style="color: yellow;"></i>
                    </a>
                    <a class="btn btn-danger btn-sm custom-link"
                        href="@Url.Action("Delete", new { id = item.IdPropiedad })">
                        <i class="fas fa-trash-alt"></i>
                    </a>

                </td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex justify-content-center mt-4">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (ViewBag.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = prevPage, pageSize = ViewBag.PageSize })"
                        aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }

            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = ViewBag.PageSize })">@i</a>
                </li>
            }

            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = nextPage, pageSize = ViewBag.PageSize })"
                        aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
</div>
